#import libraries
import rasterio as rio
import os
import numpy as np

#call the function from other jupyter file
from ipynb.fs.full.Unzip_function import unzip


# path of files
parent_dir='path of files'


#get the file path of "Unzip" folder
unzip_path = os . path . join ( parent_dir , 'Unzip' )  


#get the file path of "Tiff_Images" folder
tiff_images_path = os . path . join ( parent_dir , 'Tiff_Images' )
print (tiff_images_path)



# make the folde if not exist
def dir_path(path):
    if  not  os . path . exists ( path ): 
        os . makedirs (path) 



dir_path(unzip_path)
dir_path(tiff_images_path)


#get the 3 bands from sentinal-2

def tiff_img ( dir_path1 , dir_path2 ):
    
    subdir1 = 'GRANULE'
    subdir2 = 'IMG_DATA/R10m'
    dict1={}
    
    # make the dictionary for each image with image name as key and 3 bands as value
    
    for i in os.listdir(dir_path1): #get the path of bands by nester for loop
        
        for j in os.listdir(os.path.join(dir_path1,i,subdir1)):
            
            for k in [(os.path.join(dir_path1,i,subdir1,j))]:
                
                for band in os.listdir((os.path.join(dir_path1,i,subdir1,j, k, subdir2))):
                    
                    if 'B02_10m.jp2' in band:
                        dict1[i]= [os.path.join(dir_path1,i,subdir1,j, k, subdir2, band)]

                    if 'B03_10m.jp2' in band:
                        dict1[i].append(os.path.join(dir_path1,i,subdir1,j, k, subdir2,band))

                    if 'B04_10m.jp2' in band:
                        dict1[i].append(os.path.join(dir_path1,i,subdir1,j, k, subdir2,band))


    #save the images as tiff
    
    for img, band in dict1.items():
        
        with rio.open( dir_path2 +'/' + img[:-5] +'.tiff','w',driver='Gtiff', width=rio.open(band[0]).width, 
                       height=rio.open(band[0]).height,  count=3,crs=rio.open(band[0]).crs,transform=rio.open(band[0]).transform, 
                       dtype=rio.open(band[0]).dtypes[0]) as rgb:
            
            rgb.write(rio.open(band[0]).read(1),1) 
            rgb.write(rio.open(band[1]).read(1),2) 
            rgb.write(rio.open(band[2]).read(1),3) 
            rgb.close()
            
    return (dir_path2)



#call the tiff_img function and print its return value which is path of a folder
    
print ( tiff_img (unzip(parent_dir, unzip_path), tiff_images_path))






